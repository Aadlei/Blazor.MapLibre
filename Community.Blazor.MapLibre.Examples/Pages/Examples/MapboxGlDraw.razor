@page "/MapboxGlDraw"
@using System.Text.Json
@using Community.Blazor.MapLibre.Models.Control
@inject IJSRuntime _jsRuntime

<link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.5.0/mapbox-gl-draw.css" type="text/css">



<h3>Mapbox GL Draw</h3>

<script src="https://unpkg.com/@@turf/turf@6/turf.min.js"></script>
<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.5.0/mapbox-gl-draw.js"></script>

<div class="shadow rounded col">
    <div>
        <MapLibre @ref="_mapListener"
                  OnDrawUpdate="Callback"
                  Options="_mapOptions"
                  OnLoad="OnLoad"
                  Class="rounded-top"
                  Height="600px">
        </MapLibre>
    </div>
</div>

<div>
    Size: @size
</div>



@code {
    private MapLibre _mapListener { get; set; } = new MapLibre();

    private readonly MapOptions _mapOptions = new();

    public decimal size { get; set; } = 0m;
    private async Task OnLoad(EventArgs args)
    {
        Console.WriteLine("Map loaded successfully.");
        try
        {
            await _mapListener.AddDrawControl(new
            {
                displayControlsDefault = false,
                // Select which mapbox-gl-draw control buttons to add to the map.
                controls = new
                {
                    point = true,
                    polygon = true,
                    trash = true
                },
                // Set mapbox-gl-draw to draw by default.
                // The user does not have to click the polygon control button first.
                defaultMode = "draw_polygon"
            });

            Console.WriteLine("Control added successfully.");
        }catch (Exception ex)
        {
            Console.WriteLine($"Error adding control: {ex.Message}");
        }
    }

    private void Callback((object featureData, object mapStatus) obj)
    {
        Console.WriteLine(JsonSerializer.Serialize(obj.featureData));
        Console.WriteLine(JsonSerializer.Serialize(obj.mapStatus));
    }

}